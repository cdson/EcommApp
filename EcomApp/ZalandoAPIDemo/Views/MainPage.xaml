<Page x:Class="ZalandoAPIDemo.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:helperControls="using:UwpHelpers.Controls.ListControls"
      xmlns:local="using:ZalandoAPIDemo.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:ZalandoAPIDemo.ViewModels"
      DataContext="{Binding Source={StaticResource Locator},
                            Path=MainPageVm}"
      mc:Ignorable="d">

    <!--<Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>-->

    <Page.Resources>
        <DataTemplate x:Key="PhotosTemplate">
            <Grid Margin="12,0,12,20" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Image Grid.Row="0"
                       VerticalAlignment="Stretch"
                       Source="{Binding Path=Media.Images[0].SmallHdUrl}"
                       Stretch="Uniform" />

                <TextBlock x:Name="brandText"
                           Grid.Row="1"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Bottom"
                           FontSize="11"
                           FontWeight="SemiBold"
                           Text="{Binding Path=Brand.Name}" />

                <TextBlock x:Name="modelName"
                           Grid.Row="2"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Bottom"
                           FontFamily="Segoe UI Light"
                           FontSize="11"
                           Foreground="#666666"
                           Text="{Binding Path=Name}"
                           TextTrimming="CharacterEllipsis" />

                <TextBlock x:Name="price"
                           Grid.Row="3"
                           Margin="0,25,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Bottom"
                           FontSize="12"
                           FontWeight="SemiBold">
                    <Run Text="{Binding Path=Units[0].Price.Formatted}" />
                    <!--<Run Text=" " />
                    <Run Text="{Binding Path=Units[0].Price.Value}" />-->

                </TextBlock>


            </Grid>
        </DataTemplate>
    </Page.Resources>

    <!--    -->
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <!--  page header  -->
        <!--<controls:PageHeader x:Name="pageHeader"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Text="Main Page">

            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind GotoSettings}" Label="Settings" />
                <AppBarButton Click="{x:Bind GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>-->


        <!--  LayoutRoot  RelativePanel.Below="pageHeader"  -->
        <Grid Margin="12,0,0,0"
              Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
              EntranceNavigationTransitionInfo.IsTargetElement="True"
              RelativePanel.AlignBottomWithPanel="True"
              RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True"
              RelativePanel.AlignTopWithPanel="True">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>


            <!--  Options  -->
            <StackPanel Grid.Row="0"
                        Margin="0,12,0,12"
                        Orientation="Horizontal">

                <TextBlock VerticalAlignment="Center"
                           FontFamily="Segoe UI Light"
                           Text="Fashion for.." />

                <ComboBox x:Name="fashionOption"
                          Margin="3,0,0,0"
                          BorderThickness="0"
                          ItemsSource="{Binding Path=FilterList}"
                          SelectedItem="{Binding Path=SelectedOption,
                                                 Mode=TwoWay,
                                                 UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock FontWeight="SemiBold" Text="{Binding}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                    <!--  test  -->
                    <!--<ComboBoxItem>All</ComboBoxItem>
                <ComboBoxItem>Men</ComboBoxItem>
                <ComboBoxItem>Women</ComboBoxItem>
                <ComboBoxItem>Kids</ComboBoxItem>-->

                    <!--<Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="SelectionChanged">
                        <Core:InvokeCommandAction Command="{Binding Path=OptionSelectionChangeCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=fashionOption, Path=SelectedItem}" />
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>-->
                </ComboBox>
            </StackPanel>



            <helperControls:AdaptiveGridView x:Name="adaptiveGridView"
                                             Grid.Row="1"
                                             IsItemClickEnabled="True"
                                             ItemTemplate="{StaticResource PhotosTemplate}"
                                             ItemsSource="{Binding Path=ContentCollection}"
                                             MinItemHeight="303"
                                             MinItemWidth="190"                                             
                                             SelectionMode="Single">
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="ItemClick">
                        <!--  CommandParameter="{Binding ElementName=adaptiveGridView, Path=SelectedItem}  -->
                        <Core:InvokeCommandAction Command="{Binding Path=ItemSelectedCommand, Mode=OneWay}" />
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </helperControls:AdaptiveGridView>

        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Narrow Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Normal Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <!--<Setter Target="stateTextBox.Text" Value="Wide Visual State" />-->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>

